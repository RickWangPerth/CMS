services:
  db:
    image: postgres:14-alpine
    ports:
      - '5431:5432'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=admin
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    networks:
      custom_network:
        aliases:
          - ${PROJECT_NAME}_db.local


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
          - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app/frontend
      - node_modules:/app/frontend/node_modules
    depends_on:
      - backend
    networks:
      custom_network:
        aliases:
          - ${PROJECT_NAME}_react.local

  backend: 
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DATABASE_HOST=db
    env_file:
      - .env
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app/backend
      - ./static:/app/backend/static
    depends_on:
      - db
    networks:
      custom_network:
        aliases:
          - ${PROJECT_NAME}_django.local

networks:
  custom_network:
    name: ${PROJECT_NAME}
    driver: bridge


volumes:
  node_modules:
    driver: local